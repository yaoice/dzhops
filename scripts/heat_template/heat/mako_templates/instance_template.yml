heat_template_version: 2015-04-30

description: create instances template for cr-dev.

parameters:
  image:
    type: string
    description: OpenStack deploy image.
    default: ${image}
    constraints:
    - custom_constraint: glance.image
      description: >
        Name or ID of Image for deploy.

  flavor:
    type: string
    description: OpenStack deploy flavor.
    default: ${flavor}
    constraints:
    - custom_constraint: nova.flavor
      description: Flavor name for template.

  net:
    type: string
    description: OpenStack deploy network.
    default: ${net}
    constraints:
    - custom_constraint: neutron.network
      description: >
        Network name for template.

  volume_size:
    type: number
    description: Instance volume size.
    default: ${vol_size}

resources:
% for instance_index in range(instances_nums):

  ${stack_name}${instance_index+1}_volume_os:
    type: OS::Cinder::Volume
    properties:
      name: ${stack_name}${instance_index+1}_volume_os
      size: 40
      image: { get_param: image }

  ${stack_name}${instance_index+1}:
    type: OS::Nova::Server
    properties:
      name: ${stack_name}${instance_index+1}
      flavor: { get_param: flavor }
      block_device_mapping_v2: [{"device_name": /dev/vda, "volume_id": { get_resource: ${stack_name}${instance_index+1}_volume_os }, "delete_on_termination": true }]
      networks:
      - network: { get_param: net }

  % for volume_index in range(volume_nums):

  ${stack_name}${instance_index+1}_volume${volume_index+1}:
    type: OS::Cinder::Volume
    properties:
      name: ${stack_name}${instance_index+1}_volume${volume_index+1}
      size: { get_param: volume_size }

  ${stack_name}${instance_index+1}_attach_volume${volume_index+1}:
    type: OS::Cinder::VolumeAttachment
    depends_on: [ ${stack_name}${instance_index+1}, ${stack_name}${instance_index+1}_volume${volume_index+1} ]
    properties:
      volume_id: { get_resource: ${stack_name}${instance_index+1}_volume${volume_index+1} }
      instance_uuid: { get_resource: ${stack_name}${instance_index+1} }
      mountpoint:
  % endfor
 % endfor

